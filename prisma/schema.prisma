generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Auth {
    id       String @id @default(uuid()) @db.Uuid
    email    String @unique
    password String
    user     User?
}

model FlowElement {
    id       String  @id @default(uuid()) @db.Uuid
    userId   String  @db.Uuid
    reportId String? @db.Uuid
    type     String
    level    String
    topic    String
    task     String
    order    Int
    user     User    @relation(fields: [userId], references: [id])
    report   Report?
}

model User {
    id           String        @id @db.Uuid
    name         String
    goal         String
    feeling      String
    confidence   String
    analysis     String?
    currentOrder Int
    flowId       String?       @unique @db.Uuid
    createdAt    DateTime      @default(now())
    auth         Auth          @relation(fields: [id], references: [id])
    flowElements FlowElement[]
    reports      Report[]
    userWords    Word[]        @relation("UserWords")
    userNotes    Note[]
}

model Report {
    id          String      @id @default(uuid()) @db.Uuid
    userId      String      @db.Uuid
    flowId      String      @unique @db.Uuid
    date        DateTime    @default(now())
    userText    String
    mainComment String
    user        User        @relation(fields: [userId], references: [id])
    flow        FlowElement @relation(fields: [flowId], references: [id], onDelete: Cascade)
    comments    Comment[]
}

model Comment {
    id         String   @id @default(uuid()) @db.Uuid
    reportId   String   @db.Uuid
    startIndex Int
    endIndex   Int
    wrongText  String
    rightText  String
    info       String
    date       DateTime @default(now())
    report     Report   @relation(fields: [reportId], references: [id])
}

model Word {
    id        String   @id @default(uuid()) @db.Uuid
    word      String
    meaning   String
    example   String
    date      DateTime @default(now())
    userWords User[]   @relation("UserWords")
}

model Note {
    id      String   @id @default(uuid()) @db.Uuid
    userId  String   @db.Uuid
    heading String
    content String
    date    DateTime @default(now())
    user    User     @relation(fields: [userId], references: [id])
}
